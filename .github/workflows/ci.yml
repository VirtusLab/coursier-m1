name: CI
on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
jobs:
  build-macos-launcher:
    name: build-macos-launcher ${{ matrix.OS }}
    strategy:
      fail-fast: false
      matrix:
        OS: ["macOS-m1", "macos-latest"]
        include:
          - OS: "macOS-m1"
            JVM: "https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.1.0/graalvm-ce-java17-darwin-aarch64-22.1.0.tar.gz"
          - OS: "macos-latest"
            JVM: "https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.1.0/graalvm-ce-java17-darwin-amd64-22.1.0.tar.gz"
    runs-on: ${{ matrix.OS }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - uses: coursier/setup-action@70323223454ac2a9eb2de46f389b4d045cbcdea5
        with:
          apps: ""
          jvm: ${{ matrix.JVM }}
      - run: |
          ./mill -i "cs-m1.writeNativeImageScript" generate.sh "" && \
          ./generate.sh && \
          ./mill -i "cs-m1.copyToArtifacts" artifacts/
        env:
          GRAALVM_ID: ${{ matrix.JVM }}
      - name: Build OS packages
        if: matrix.os == 'macOS-m1'
        run: .github/scripts/generate-os-packages.sh
        shell: bash
      - uses: actions/upload-artifact@v3.1.2
        with:
          name: macos-launcher
          path: artifacts/
          if-no-files-found: error
          retention-days: 1
      - name: Test
        run: ./mill -i cs-m1-tests.test

  build-linux-launcher:
    runs-on: "macOS-m1"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - uses: coursier/setup-action@70323223454ac2a9eb2de46f389b4d045cbcdea5
        with:
          apps: ""

      - run: .github/scripts/build-linux-aarch64.sh

      - uses: actions/upload-artifact@v3.1.1
        with:
          name: linux-launcher
          path: artifacts/
          if-no-files-found: error
          retention-days: 1

      - run: .github/scripts/test-linux-aarch64.sh

  upload-artifacts:
    if: github.event_name == 'push'
    runs-on: "ubuntu-latest"
    needs: ["build-macos-launcher", "build-linux-launcher"]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Get macOS launchers
        uses: actions/download-artifact@v3
        with:
          name: macos-launcher
          path: artifacts/
      - name: Get Linux launcher
        uses: actions/download-artifact@v3
        with:
          name: linux-launcher
          path: artifacts/
      - run: ./mill -i ci.upload artifacts/
        env:
          UPLOAD_GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
